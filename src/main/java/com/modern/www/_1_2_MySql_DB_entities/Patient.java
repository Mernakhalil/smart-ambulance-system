package com.modern.www._1_2_MySql_DB_entities;
// Generated May 13, 2022 7:18:24 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name="patient"
    ,catalog="smrtamb"
)
public class Patient  implements java.io.Serializable {


     private long ssn;
     private String name;
     private Date birthDate;
     private String address;
     private String bloodType;
     private Set<PatientDiseases> patientDiseaseses = new HashSet<PatientDiseases>(0);
     private Set<PatientMeasurements> patientMeasurementses = new HashSet<PatientMeasurements>(0);
     private Set<PatientCase> patientCases = new HashSet<PatientCase>(0);
     private Set<PatientSurgeryDoctor> patientSurgeryDoctors = new HashSet<PatientSurgeryDoctor>(0);
     private Set<PatientAmbulanceHospital> patientAmbulanceHospitals = new HashSet<PatientAmbulanceHospital>(0);

    public Patient() {
    }

	
    public Patient(long ssn, String name, Date birthDate, String address, String bloodType) {
        this.ssn = ssn;
        this.name = name;
        this.birthDate = birthDate;
        this.address = address;
        this.bloodType = bloodType;
    }
    public Patient(long ssn, String name, Date birthDate, String address, String bloodType, Set<PatientDiseases> patientDiseaseses, Set<PatientMeasurements> patientMeasurementses, Set<PatientCase> patientCases, Set<PatientSurgeryDoctor> patientSurgeryDoctors, Set<PatientAmbulanceHospital> patientAmbulanceHospitals) {
       this.ssn = ssn;
       this.name = name;
       this.birthDate = birthDate;
       this.address = address;
       this.bloodType = bloodType;
       this.patientDiseaseses = patientDiseaseses;
       this.patientMeasurementses = patientMeasurementses;
       this.patientCases = patientCases;
       this.patientSurgeryDoctors = patientSurgeryDoctors;
       this.patientAmbulanceHospitals = patientAmbulanceHospitals;
    }
   
     @Id 

    
    @Column(name="SSN", unique=true, nullable=false)
    public long getSsn() {
        return this.ssn;
    }
    
    public void setSsn(long ssn) {
        this.ssn = ssn;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="birth_date", nullable=false, length=10)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    
    @Column(name="address", nullable=false, length=150)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="blood_type", nullable=false, length=10)
    public String getBloodType() {
        return this.bloodType;
    }
    
    public void setBloodType(String bloodType) {
        this.bloodType = bloodType;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patient")
    public Set<PatientDiseases> getPatientDiseaseses() {
        return this.patientDiseaseses;
    }
    
    public void setPatientDiseaseses(Set<PatientDiseases> patientDiseaseses) {
        this.patientDiseaseses = patientDiseaseses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patient")
    public Set<PatientMeasurements> getPatientMeasurementses() {
        return this.patientMeasurementses;
    }
    
    public void setPatientMeasurementses(Set<PatientMeasurements> patientMeasurementses) {
        this.patientMeasurementses = patientMeasurementses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patient")
    public Set<PatientCase> getPatientCases() {
        return this.patientCases;
    }
    
    public void setPatientCases(Set<PatientCase> patientCases) {
        this.patientCases = patientCases;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patient")
    public Set<PatientSurgeryDoctor> getPatientSurgeryDoctors() {
        return this.patientSurgeryDoctors;
    }
    
    public void setPatientSurgeryDoctors(Set<PatientSurgeryDoctor> patientSurgeryDoctors) {
        this.patientSurgeryDoctors = patientSurgeryDoctors;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="patient")
    public Set<PatientAmbulanceHospital> getPatientAmbulanceHospitals() {
        return this.patientAmbulanceHospitals;
    }
    
    public void setPatientAmbulanceHospitals(Set<PatientAmbulanceHospital> patientAmbulanceHospitals) {
        this.patientAmbulanceHospitals = patientAmbulanceHospitals;
    }




}


